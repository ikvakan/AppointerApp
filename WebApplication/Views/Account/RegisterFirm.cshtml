@model WebApplication.Models.CompanyModel

@{
    ViewBag.Title = "Registriraj tvrtku";
    //var categories = ViewBag.Categories as SelectList ;
    var categories = (List<SelectListItem>)ViewBag.Categories  ;

   
}



<div class="text-center" style="padding:30px;">
    <h2 class="text-danger">Registracija tvrtke</h2>

</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container-fluid">
        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-md-4 control-label" })

                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        
                    </div>
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.Adress, htmlAttributes: new { @class = "col-md-4 control-label" })

                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                        @Html.EditorFor(model => model.Adress, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.Adress, "", new { @class = "text-danger" })

                </div>
            </div>





            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "col-md-4 control-label" })

                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })

                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-md-4 control-label" })
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-envelope"></i></span>
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                </div>
            </div>
             


            <div class="form-group">
                @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "col-md-4 control-label" })
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                        @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })

                </div>
            </div>


            @*dropdown*@
            <div class="form-group">
                @Html.LabelFor(model => model.CategoryName, htmlAttributes: new { @class = "col-md-4 control-label" })
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-list"></i></span>
                        @*@Html.DropDownListFor(model => model.CategoryModel.CategoryName,categories,new { @class="form-control" })*@
                        @Html.Partial("_Categories",categories)
                        
                        
                    </div>
                    @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "col-md-4 control-label" })
                <div class="col-md-4 inputGroupContainer">

                    <div class="input-group">
                        @Html.TextAreaFor(model => model.Description,new {@cols="60",@rows="8",@style="width:100%; max-width:90%;" })
                    </div>
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group text-center">
                <label class="col-md-4 control-label"></label>
                <div class="col-md-4">
                    <br>
                    <button type="submit" class="btn btn-warning">Registriraj tvrtku <span class="glyphicon glyphicon-send"></span></button>
                </div>
            </div>



        </div>

    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index","Home")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
